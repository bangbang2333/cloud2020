server:
  port: 8401

spring:
  application:
    name: cloudalibaba-sentinel-service
  cloud:
    nacos:
      discovery:
        server-addr: 47.104.199.49:8848 #Nacos服务注册中心地址
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8888
        clientIp: localhost #配置本机ip，dashboard通过这个ip去拿数据
      http-method-specify: true
      datasource:
        ds1:
          nacos:
            server-addr: 47.104.199.49:8848
            namespace: 3211dbe5-f20a-4237-a25a-4a423a48cffa
            dataId: cloudalibaba-sentinel-service-flow
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: flow
        ds2:
          nacos:
            server-addr: 47.104.199.49:8848
            namespace: 3211dbe5-f20a-4237-a25a-4a423a48cffa
            dataId: cloudalibaba-sentinel-service-degrade
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: degrade
        ds3:
          nacos:
            server-addr: 47.104.199.49:8848
            namespace: 3211dbe5-f20a-4237-a25a-4a423a48cffa
            dataId: cloudalibaba-sentinel-service-param-flow
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: param-flow
        ds4:
          nacos:
            server-addr: 47.104.199.49:8848
            namespace: 3211dbe5-f20a-4237-a25a-4a423a48cffa
            dataId: cloudalibaba-sentinel-service-system
            groupId: DEFAULT_GROUP
            data-type: json
            rule-type: system
  endpoints:
    web:
      exposure:
        include: '*'

#feign:
#  sentinel:
#    enabled: true # 激活Sentinel对Feign的支持

dubbo:
  protocol:    #Dubbo 服务暴露的协议配置，其中子属性 name 为协议名称，port 为协议端口（ -1 表示自增端口，从 20880 开始）
    name: dubbo
    port: 34657  #dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；如果没有配置port，则自动采用默认端口，如果配置为-1，则会分配一个没有被占用的端口。Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控
  registry:
    #dubbo服务注册端口，注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port
    #其中前缀spring-cloud说明：挂载到 Spring Cloud注册中心
    address: spring-cloud://47.104.199.49:8848
    check: false  #关闭注册中心是否启动的相关检查,false表示不检查注册中心是否启动，就不会报错
  consumer:
    check: false
#  provider:
#    filter: tracing
